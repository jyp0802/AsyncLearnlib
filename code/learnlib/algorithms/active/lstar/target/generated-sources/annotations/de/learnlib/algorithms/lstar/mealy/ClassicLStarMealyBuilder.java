/*
 * Automatically generated by BuilderGen, https://github.com/misberner/buildergen.
 * DO NOT EDIT THIS FILE! Your changes will be overwritten.
 * Edit the @GenerateBuilder specification of class
 * de.learnlib.algorithms.lstar.mealy.ClassicLStarMealy<I,O>
 */

package de.learnlib.algorithms.lstar.mealy;

public final class ClassicLStarMealyBuilder<
		I extends java.lang.Object,
		O extends java.lang.Object> {

	private static<
			I extends java.lang.Object,
			O extends java.lang.Object> de.learnlib.algorithms.lstar.mealy.ClassicLStarMealy<I,O> $createDispatch(
		net.automatalib.words.Alphabet<I> alphabet,
		de.learnlib.api.oracle.MembershipOracle<I,O> oracle,
		java.util.List<net.automatalib.words.Word<I>> initialPrefixes,
		java.util.List<net.automatalib.words.Word<I>> initialSuffixes,
		de.learnlib.algorithms.lstar.ce.ObservationTableCEXHandler<? super I,? super O> cexHandler,
		de.learnlib.algorithms.lstar.closing.ClosingStrategy<? super I,? super O> closingStrategy
		) {
		return new de.learnlib.algorithms.lstar.mealy.ClassicLStarMealy<I,O>(
			alphabet,
			oracle,
			initialPrefixes,
			initialSuffixes,
			cexHandler,
			closingStrategy
			);
	}

	private net.automatalib.words.Alphabet<I> alphabet;
	private de.learnlib.api.oracle.MembershipOracle<I,O> oracle;
	private java.util.List<net.automatalib.words.Word<I>> initialPrefixes;
	private java.util.List<net.automatalib.words.Word<I>> initialSuffixes;
	private de.learnlib.algorithms.lstar.ce.ObservationTableCEXHandler<? super I,? super O> cexHandler;
	private de.learnlib.algorithms.lstar.closing.ClosingStrategy<? super I,? super O> closingStrategy;

	public ClassicLStarMealyBuilder() {
		this.initialPrefixes = de.learnlib.algorithms.lstar.AbstractExtensibleAutomatonLStar.BuilderDefaults.initialPrefixes();
		this.initialSuffixes = de.learnlib.algorithms.lstar.AbstractExtensibleAutomatonLStar.BuilderDefaults.initialSuffixes();
		this.cexHandler = de.learnlib.algorithms.lstar.AbstractExtensibleAutomatonLStar.BuilderDefaults.cexHandler();
		this.closingStrategy = de.learnlib.algorithms.lstar.AbstractExtensibleAutomatonLStar.BuilderDefaults.closingStrategy();
	}

	public de.learnlib.algorithms.lstar.mealy.ClassicLStarMealy<I,O> create() {
		return $createDispatch(
			this.alphabet,
			this.oracle,
			this.initialPrefixes,
			this.initialSuffixes,
			this.cexHandler,
			this.closingStrategy
			);
	}

	public net.automatalib.words.Alphabet<I> getAlphabet() {
		return this.alphabet;
	}
	public void setAlphabet(net.automatalib.words.Alphabet<I> alphabet) {
		this.alphabet = alphabet;
	}
	public ClassicLStarMealyBuilder<I, O> withAlphabet(net.automatalib.words.Alphabet<I> alphabet) {
		this.alphabet = alphabet;
		return this;
	} 

	public de.learnlib.api.oracle.MembershipOracle<I,O> getOracle() {
		return this.oracle;
	}
	public void setOracle(de.learnlib.api.oracle.MembershipOracle<I,O> oracle) {
		this.oracle = oracle;
	}
	public ClassicLStarMealyBuilder<I, O> withOracle(de.learnlib.api.oracle.MembershipOracle<I,O> oracle) {
		this.oracle = oracle;
		return this;
	} 

	public java.util.List<net.automatalib.words.Word<I>> getInitialPrefixes() {
		return this.initialPrefixes;
	}
	public void setInitialPrefixes(java.util.List<net.automatalib.words.Word<I>> initialPrefixes) {
		this.initialPrefixes = initialPrefixes;
	}
	public ClassicLStarMealyBuilder<I, O> withInitialPrefixes(java.util.List<net.automatalib.words.Word<I>> initialPrefixes) {
		this.initialPrefixes = initialPrefixes;
		return this;
	} 

	public java.util.List<net.automatalib.words.Word<I>> getInitialSuffixes() {
		return this.initialSuffixes;
	}
	public void setInitialSuffixes(java.util.List<net.automatalib.words.Word<I>> initialSuffixes) {
		this.initialSuffixes = initialSuffixes;
	}
	public ClassicLStarMealyBuilder<I, O> withInitialSuffixes(java.util.List<net.automatalib.words.Word<I>> initialSuffixes) {
		this.initialSuffixes = initialSuffixes;
		return this;
	} 

	public de.learnlib.algorithms.lstar.ce.ObservationTableCEXHandler<? super I,? super O> getCexHandler() {
		return this.cexHandler;
	}
	public void setCexHandler(de.learnlib.algorithms.lstar.ce.ObservationTableCEXHandler<? super I,? super O> cexHandler) {
		this.cexHandler = cexHandler;
	}
	public ClassicLStarMealyBuilder<I, O> withCexHandler(de.learnlib.algorithms.lstar.ce.ObservationTableCEXHandler<? super I,? super O> cexHandler) {
		this.cexHandler = cexHandler;
		return this;
	} 

	public de.learnlib.algorithms.lstar.closing.ClosingStrategy<? super I,? super O> getClosingStrategy() {
		return this.closingStrategy;
	}
	public void setClosingStrategy(de.learnlib.algorithms.lstar.closing.ClosingStrategy<? super I,? super O> closingStrategy) {
		this.closingStrategy = closingStrategy;
	}
	public ClassicLStarMealyBuilder<I, O> withClosingStrategy(de.learnlib.algorithms.lstar.closing.ClosingStrategy<? super I,? super O> closingStrategy) {
		this.closingStrategy = closingStrategy;
		return this;
	} 

}