/*
 * Automatically generated by BuilderGen, https://github.com/misberner/buildergen.
 * DO NOT EDIT THIS FILE! Your changes will be overwritten.
 * Edit the @GenerateBuilder specification of class
 * de.learnlib.algorithms.adt.learner.ADTLearner<I,O>
 */

package de.learnlib.algorithms.adt.learner;

public final class ADTLearnerBuilder<
		I extends java.lang.Object,
		O extends java.lang.Object> {

	private static<
			I extends java.lang.Object,
			O extends java.lang.Object> de.learnlib.algorithms.adt.learner.ADTLearner<I,O> $createDispatch(
		net.automatalib.words.Alphabet<I> alphabet,
		de.learnlib.api.oracle.SymbolQueryOracle<I,O> oracle,
		de.learnlib.algorithms.adt.api.LeafSplitter leafSplitter,
		de.learnlib.algorithms.adt.api.ADTExtender adtExtender,
		de.learnlib.algorithms.adt.api.SubtreeReplacer subtreeReplacer
		) {
		return new de.learnlib.algorithms.adt.learner.ADTLearner<I,O>(
			alphabet,
			oracle,
			leafSplitter,
			adtExtender,
			subtreeReplacer
			);
	}

	private net.automatalib.words.Alphabet<I> alphabet;
	private de.learnlib.api.oracle.SymbolQueryOracle<I,O> oracle;
	private de.learnlib.algorithms.adt.api.LeafSplitter leafSplitter;
	private de.learnlib.algorithms.adt.api.ADTExtender adtExtender;
	private de.learnlib.algorithms.adt.api.SubtreeReplacer subtreeReplacer;

	public ADTLearnerBuilder() {
		this.leafSplitter = de.learnlib.algorithms.adt.learner.ADTLearner.BuilderDefaults.leafSplitter();
		this.adtExtender = de.learnlib.algorithms.adt.learner.ADTLearner.BuilderDefaults.adtExtender();
		this.subtreeReplacer = de.learnlib.algorithms.adt.learner.ADTLearner.BuilderDefaults.subtreeReplacer();
	}

	public de.learnlib.algorithms.adt.learner.ADTLearner<I,O> create() {
		return $createDispatch(
			this.alphabet,
			this.oracle,
			this.leafSplitter,
			this.adtExtender,
			this.subtreeReplacer
			);
	}

	public net.automatalib.words.Alphabet<I> getAlphabet() {
		return this.alphabet;
	}
	public void setAlphabet(net.automatalib.words.Alphabet<I> alphabet) {
		this.alphabet = alphabet;
	}
	public ADTLearnerBuilder<I, O> withAlphabet(net.automatalib.words.Alphabet<I> alphabet) {
		this.alphabet = alphabet;
		return this;
	} 

	public de.learnlib.api.oracle.SymbolQueryOracle<I,O> getOracle() {
		return this.oracle;
	}
	public void setOracle(de.learnlib.api.oracle.SymbolQueryOracle<I,O> oracle) {
		this.oracle = oracle;
	}
	public ADTLearnerBuilder<I, O> withOracle(de.learnlib.api.oracle.SymbolQueryOracle<I,O> oracle) {
		this.oracle = oracle;
		return this;
	} 

	public de.learnlib.algorithms.adt.api.LeafSplitter getLeafSplitter() {
		return this.leafSplitter;
	}
	public void setLeafSplitter(de.learnlib.algorithms.adt.api.LeafSplitter leafSplitter) {
		this.leafSplitter = leafSplitter;
	}
	public ADTLearnerBuilder<I, O> withLeafSplitter(de.learnlib.algorithms.adt.api.LeafSplitter leafSplitter) {
		this.leafSplitter = leafSplitter;
		return this;
	} 

	public de.learnlib.algorithms.adt.api.ADTExtender getAdtExtender() {
		return this.adtExtender;
	}
	public void setAdtExtender(de.learnlib.algorithms.adt.api.ADTExtender adtExtender) {
		this.adtExtender = adtExtender;
	}
	public ADTLearnerBuilder<I, O> withAdtExtender(de.learnlib.algorithms.adt.api.ADTExtender adtExtender) {
		this.adtExtender = adtExtender;
		return this;
	} 

	public de.learnlib.algorithms.adt.api.SubtreeReplacer getSubtreeReplacer() {
		return this.subtreeReplacer;
	}
	public void setSubtreeReplacer(de.learnlib.algorithms.adt.api.SubtreeReplacer subtreeReplacer) {
		this.subtreeReplacer = subtreeReplacer;
	}
	public ADTLearnerBuilder<I, O> withSubtreeReplacer(de.learnlib.algorithms.adt.api.SubtreeReplacer subtreeReplacer) {
		this.subtreeReplacer = subtreeReplacer;
		return this;
	} 

}