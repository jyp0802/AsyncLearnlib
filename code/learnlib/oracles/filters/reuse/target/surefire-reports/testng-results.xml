<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="12" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="292" started-at="2018-04-19T08:23:04Z" finished-at="2018-04-19T08:23:04Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="292" started-at="2018-04-19T08:23:04Z" finished-at="2018-04-19T08:23:04Z">
      <class name="de.learnlib.filter.reuse.test.LearningTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.LearningTest@dfd3711]" name="setUp" is-config="true" duration-ms="1" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="simpleTest()[pri:0, instance:de.learnlib.filter.reuse.test.LearningTest@dfd3711]" name="simpleTest" duration-ms="74" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleTest -->
      </class> <!-- de.learnlib.filter.reuse.test.LearningTest -->
      <class name="de.learnlib.filter.reuse.test.ReuseOracleTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="setUp" is-config="true" duration-ms="1" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testConflictException()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="testConflictException" duration-ms="1" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <exception class="de.learnlib.filter.reuse.ReuseException">
            <message>
              <![CDATA[Conflict: input '1 1 3', output 'ok different notimp', i=1, cached output 'ok']]>
            </message>
            <full-stacktrace>
              <![CDATA[de.learnlib.filter.reuse.ReuseException: Conflict: input '1 1 3', output 'ok different notimp', i=1, cached output 'ok'
	at de.learnlib.filter.reuse.tree.ReuseTree.insert(ReuseTree.java:328)
	at de.learnlib.filter.reuse.tree.ReuseTree.insert(ReuseTree.java:278)
	at de.learnlib.filter.reuse.test.ReuseOracleTest.testConflictException(ReuseOracleTest.java:236)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- de.learnlib.filter.reuse.ReuseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConflictException -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="setUp" is-config="true" duration-ms="0" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="setUp" is-config="true" duration-ms="1" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoReusePossible()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="testNoReusePossible" duration-ms="0" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoReusePossible -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="setUp" is-config="true" duration-ms="1" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReusePossible()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="testReusePossible" duration-ms="0" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReusePossible -->
        <test-method status="PASS" signature="testTreeIsEmpty()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="testTreeIsEmpty" duration-ms="0" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTreeIsEmpty -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="setUp" is-config="true" duration-ms="1" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReusePossibleWithInvalidation()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="testReusePossibleWithInvalidation" duration-ms="0" started-at="2018-04-19T17:23:04Z" depends-on-methods="de.learnlib.filter.reuse.test.ReuseOracleTest.testNoReusePossible" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReusePossibleWithInvalidation -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="setUp" is-config="true" duration-ms="1" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="setUp" is-config="true" duration-ms="1" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testTreeIsAbleToCache()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="testTreeIsAbleToCache" duration-ms="0" started-at="2018-04-19T17:23:04Z" depends-on-methods="de.learnlib.filter.reuse.test.ReuseOracleTest.testTreeIsEmpty" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTreeIsAbleToCache -->
        <test-method status="PASS" signature="testTreeDoesNotPump()[pri:0, instance:de.learnlib.filter.reuse.test.ReuseOracleTest@26ba2a48]" name="testTreeDoesNotPump" duration-ms="0" started-at="2018-04-19T17:23:04Z" depends-on-methods="de.learnlib.filter.reuse.test.ReuseOracleTest.testTreeIsAbleToCache" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTreeDoesNotPump -->
      </class> <!-- de.learnlib.filter.reuse.test.ReuseOracleTest -->
      <class name="de.learnlib.filter.reuse.test.DomainKnowledgeTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.DomainKnowledgeTest@2ed94a8b]" name="setUp" is-config="true" duration-ms="104" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPumpSymbolsSimple()[pri:0, instance:de.learnlib.filter.reuse.test.DomainKnowledgeTest@2ed94a8b]" name="testPumpSymbolsSimple" duration-ms="58" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPumpSymbolsSimple -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.DomainKnowledgeTest@2ed94a8b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReuseNodePrefixWhileReusing()[pri:0, instance:de.learnlib.filter.reuse.test.DomainKnowledgeTest@2ed94a8b]" name="testReuseNodePrefixWhileReusing" duration-ms="2" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReuseNodePrefixWhileReusing -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.DomainKnowledgeTest@2ed94a8b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPumpSymbolsComplex()[pri:0, instance:de.learnlib.filter.reuse.test.DomainKnowledgeTest@2ed94a8b]" name="testPumpSymbolsComplex" duration-ms="0" started-at="2018-04-19T17:23:04Z" depends-on-methods="de.learnlib.filter.reuse.test.DomainKnowledgeTest.testPumpSymbolsSimple" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPumpSymbolsComplex -->
      </class> <!-- de.learnlib.filter.reuse.test.DomainKnowledgeTest -->
      <class name="de.learnlib.filter.reuse.test.QuiescenceTest">
        <test-method status="PASS" signature="simpleTest()[pri:0, instance:de.learnlib.filter.reuse.test.QuiescenceTest@42d3bd8b]" name="simpleTest" duration-ms="2" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:de.learnlib.filter.reuse.test.QuiescenceTest@42d3bd8b]" name="setUp" is-config="true" duration-ms="0" started-at="2018-04-19T17:23:04Z" finished-at="2018-04-19T17:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- de.learnlib.filter.reuse.test.QuiescenceTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
