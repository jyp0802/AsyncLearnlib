<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Junyong" ignored="0" name="Surefire test" tests="25" failures="0" timestamp="19 4ì›” 2018 08:22:53 GMT" time="0.146" errors="0">
  <testcase name="@BeforeClass setupBeforeClass" time="0.108" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeClass setupBeforeClass -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass setupBeforeClass" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeClass setupBeforeClass -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeClass setupBeforeClass" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeClass setupBeforeClass -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="testSkipOutputs" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLMealyTest">
    <skipped/>
  </testcase> <!-- testSkipOutputs -->
  <testcase name="testFindCounterExample" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- testFindCounterExample -->
  <testcase name="testComputeUnfolds" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testComputeUnfolds -->
  <testcase name="testComputeUnfoldsExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testComputeUnfoldsExcept -->
  <testcase name="testSetMinimumUnfolds" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMinimumUnfolds -->
  <testcase name="testSetMinimumUnfoldsExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMinimumUnfoldsExcept -->
  <testcase name="testSetMultiplier" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMultiplier -->
  <testcase name="testSetMultiplierExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMultiplierExcept -->
  <testcase name="testFindCounterExample" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- testFindCounterExample -->
  <testcase name="testComputeUnfolds" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testComputeUnfolds -->
  <testcase name="testComputeUnfoldsExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testComputeUnfoldsExcept -->
  <testcase name="testSetMinimumUnfolds" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMinimumUnfolds -->
  <testcase name="testSetMinimumUnfoldsExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMinimumUnfoldsExcept -->
  <testcase name="testSetMultiplier" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMultiplier -->
  <testcase name="testSetMultiplierExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMultiplierExcept -->
  <testcase name="testEmptyLanguage" time="0.0" classname="de.learnlib.modelchecking.modelchecker.LTSminLTLDFATest">
    <skipped/>
  </testcase> <!-- testEmptyLanguage -->
  <testcase name="testPrefixClosed" time="0.0" classname="de.learnlib.modelchecking.modelchecker.LTSminLTLDFATest">
    <skipped/>
  </testcase> <!-- testPrefixClosed -->
  <testcase name="testSkipOutputs" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLMealyTest">
    <skipped/>
  </testcase> <!-- testSkipOutputs -->
  <testcase name="testFindCounterExample" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractLTSminLTLTest">
    <skipped/>
  </testcase> <!-- testFindCounterExample -->
  <testcase name="testComputeUnfolds" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testComputeUnfolds -->
  <testcase name="testComputeUnfoldsExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testComputeUnfoldsExcept -->
  <testcase name="testSetMinimumUnfolds" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMinimumUnfolds -->
  <testcase name="testSetMinimumUnfoldsExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMinimumUnfoldsExcept -->
  <testcase name="testSetMultiplier" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMultiplier -->
  <testcase name="testSetMultiplierExcept" time="0.0" classname="de.learnlib.modelchecking.modelchecker.AbstractUnfoldingModelCheckerTest">
    <skipped/>
  </testcase> <!-- testSetMultiplierExcept -->
</testsuite> <!-- Surefire test -->
